window.addEventListener('load',function(){if(typeof web3!=='undefined'){web3js=new Web3(web3.currentProvider);console.log('Injected web3 dectected. Creating web3 object and starting app :)')}else{console.log('No web3? You should consider trying MetaMask!')
throw document.getElementById('warning').innerHTML="Can't locate MetaMask plugin. Please install MetaMask first."}
loggedIn();checkNetwork()});function loggedIn(){web3.eth.getAccounts(function(err,accounts){if(err!=null)console.error("An error occurred: "+err);else if(accounts.length==0){console.log("User is not logged in to MetaMask");document.getElementById('warning').innerHTML="Please log into MetaMask"}
else console.log("User is logged in to MetaMask")})};function checkNetwork(){web3.version.getNetwork((err,netId)=>{switch(netId){case "1":console.log('This is mainnet')
document.getElementById('warning').innerHTML="You are on mainnet. Please change to Rinkeby test network.";break
case "2":console.log('This is the deprecated Morden test network.')
document.getElementById('warning').innerHTML="You are on Morden network. Please change to Rinkeby test network.";break
case "3":console.log('This is the ropsten test network.')
document.getElementById('warning').innerHTML="You are on Ropsten network. Please change to Rinkeby test network.";break
case "4":console.log('This is the Rinkeby test network.')
break
case "42":console.log('This is the Kovan test network.')
document.getElementById('warning').innerHTML="You are on Kovan test network. Please change to Rinkeby test network.";break
default:console.log('This is an unknown network.')
document.getElementById('warning').innerHTML="Please change to Rinkeby test network."}})};function encodeSecret(){loggedIn();checkNetwork();var contractAddress="0x23a610a8aa3582ef0ad45c60a7c66162b5d5b6c8";var userAddress=web3.eth.defaultAccount;console.log(userAddress);var hashUser=web3.sha3(userAddress,{encoding:'hex'});var secret=document.getElementById('secret').value;if(secret.length===0)throw document.getElementById('warning').innerHTML="Secret can't be empty.";console.log(secret);var secretToHex=web3.toHex(secret);console.log("secret encoded as Hex: "+secretToHex);var l=secretToHex.length;if(l>66){throw alert("Secret too long. Maximum 32 characters.")}
var padding=""
for(l;l<66;l++){padding=padding.concat("0")}
secretToHex=secretToHex.concat(padding);console.log("secretToHex with padding: "+secretToHex);var a=new BN(hashUser,16);console.log("BigNumber hashUser: "+a);var b=new BN(secretToHex,16);console.log("BigNumber secretToHex: "+b);var addressSecret='0x'+a.xor(b).toString(16);console.log("Address Secret: "+addressSecret);var payload=web3.sha3(addressSecret,{encoding:'hex'});console.log("Final result (hash of address secret): "+payload);sendTx(payload,contractAddress)};function sendTx(payload,contractAddress){var abi=[{"constant":!0,"inputs":[],"name":"version","outputs":[{"name":"","type":"string"}],"payable":!1,"stateMutability":"view","type":"function"},{"constant":!0,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":!1,"stateMutability":"view","type":"function"},{"constant":!0,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":!1,"stateMutability":"view","type":"function"},{"constant":!0,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":!1,"stateMutability":"view","type":"function"},{"constant":!0,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":!1,"stateMutability":"view","type":"function"},{"constant":!0,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":!1,"stateMutability":"view","type":"function"},{"constant":!0,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":!1,"stateMutability":"view","type":"function"},{"constant":!0,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":!1,"stateMutability":"view","type":"function"},{"constant":!0,"inputs":[{"name":"","type":"address"}],"name":"members","outputs":[{"name":"","type":"bool"}],"payable":!1,"stateMutability":"view","type":"function"},{"constant":!1,"inputs":[{"name":"_spender","type":"address"},{"name":"_addedValue","type":"uint256"}],"name":"increaseApproval","outputs":[{"name":"","type":"bool"}],"payable":!1,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":!1,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":!1,"inputs":[{"indexed":!0,"name":"owner","type":"address"},{"indexed":!0,"name":"spender","type":"address"},{"indexed":!1,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"constant":!1,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":!1,"stateMutability":"nonpayable","type":"function"},{"anonymous":!1,"inputs":[{"indexed":!0,"name":"from","type":"address"},{"indexed":!0,"name":"to","type":"address"},{"indexed":!1,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":!1,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":!1,"stateMutability":"nonpayable","type":"function"},{"constant":!1,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":!1,"stateMutability":"nonpayable","type":"function"},{"constant":!1,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"},{"name":"_extraData","type":"bytes"}],"name":"approveAndCall","outputs":[{"name":"success","type":"bool"}],"payable":!1,"stateMutability":"nonpayable","type":"function"},{"constant":!1,"inputs":[{"name":"addressSecret","type":"bytes32"}],"name":"getToken","outputs":[{"name":"success","type":"bool"}],"payable":!1,"stateMutability":"nonpayable","type":"function"},{"constant":!1,"inputs":[{"name":"_secret","type":"bytes32"}],"name":"setSecret","outputs":[],"payable":!1,"stateMutability":"nonpayable","type":"function"},{"constant":!1,"inputs":[{"name":"_member","type":"address"}],"name":"setMembers","outputs":[{"name":"success","type":"bool"}],"payable":!1,"stateMutability":"nonpayable","type":"function"},{"constant":!1,"inputs":[{"name":"_spender","type":"address"},{"name":"_subtractedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"name":"","type":"bool"}],"payable":!1,"stateMutability":"nonpayable","type":"function"}]
var MyContract=web3.eth.contract(abi);console.log("contractAddress: "+contractAddress);console.log("payload: "+payload);var myContractInstance=MyContract.at(contractAddress);var transactionData=myContractInstance.getToken.getData(payload);console.log("transactionData: "+transactionData);web3.eth.sendTransaction({to:contractAddress,data:transactionData},function(err,transactionHash){if(!err)
console.log("Transaction ID:"+transactionHash);var link="<a target='_blank' href = 'https://rinkeby.etherscan.io/tx/"+transactionHash+"'> "+transactionHash+" </a>";document.getElementById('output').innerHTML="Your transaction ID: "+link})}